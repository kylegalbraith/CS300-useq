 # Kyle Galbraith	Compliance Level 1 - Test Cases

T1. input: 1 10
	output: 1 2 3 4 5 6 7 8 9 10

T2. input: -1 1
	output: -1 0 1

T3. input: 5 4
	output: nothing

T4. input: -1 -3 
	output: nothing	

T5. input: 1
	output: 1

T6. input: 0 4
	output: 0 1 2 3 4

T7. input: -3 0
	output: -3 -2 -1 0

T8. input: 0 0
	output: 0

T9. input: 2 2
	output: 2

T10. input: 1 1000
	output: 1 2 3 4 5 up to and including 1000

T11. input:
	output: Error - print help message

T12. input: 1 4 5
	output: 1 5

T13. input: 3.3 5.6
	output: 3.3 4.3 5.3

T14. input: 0.1 2.2
	output: 0.1 1.1 2.1

T15. input: 6.7 12
	output: 6.7 7.7 8.7 9.7 10.7 11.7 

T16. input: 2.2
	output: 2.2

T17. input: 1.2 2.1 3.3
	output: 1.2 3.2

	input: 0.1 -0.1 -0.2
	output: 0.1 0.0 -0.1 -0.2

	input: 1 -1 0
	output: 1 0

	input: 10 -1 10
	output: 10

	input: 1 -1 10
	output: nothing

	input: 10.0
	output: 1 2 3 4 5 6 7 8 9 10

	input: 1.00 1.0 10.0
	output: 1.00 2.00 3.00 4.00 5.00 6.00 7.00 8.00 9.00 10.00

	input: -10 -1
	output: -10 -9 -8 -7 -6 -5 -4 -3 -2 -1

	input: 1e-02 5
	output: 0.01 1.01 2.01 3.01 4.01

## These are new test cases for CL1 ##

T18. input: --version
     	output: Print version info

T19. input: --help
        output: Print help documentation

T20. input: --version 1 10
        output: Print version info

T21. input: 1 10 --version
        output: Error - extra operand

T22. input: --help 1.1 6
        output: Print help documentation

T23. input: 1.1 6 --help
        output: Error - extra operand

T24. input: --version --help
        output: Print version info

T25. input: --help --version
        output: Print help documentation


## Equal Width Tests ##

T26. input: -w 1 10
	output: 01 02 03 04 05 06 07 08 09 10

T33. input: -w -10 -1
	output: -10 -09 -08 -07 -06 -05 -04 -03 -02 -01 

T34. input: --equal-width -10 -1
	output: -10 -09 -08 -07 -06 -05 -04 -03 -02 -01 

T35. input: -w 9.8 .01 10.1
	output: 09.80 09.81 ... 10.10

T36. input: -w -1.001 11
	output: -1.001 -0.001 00.999 01.999 ... 10.999

T37. input: -w -1 1.1 11
	output: -1.0 00.1 01.2 02.3 03.4 ... 10.0

# This test case is broken in seq. So the output is what you would expect #
T38. input: -w 10 -1.1 1
	output: 10.0 08.9 07.8 06.7 05.6 04.5 03.4 02.3 01.2
	actual output: 10.0 8.9 7.8 6.7 5.6 4.5 3.4 2.3 1.2

T39. input: -w -1.1 10
	output: -1.1 -0.1 00.9 01.9 02.9 03.9 04.9 05.9 06.9 07.9 08.9 09.9

T40. input: -w -1.1 1.2 10
	output: -1.1 00.1 01.3 02.5 03.7 04.9 06.1 07.3 08.5 09.7

T41. input: -w 0 1.1 16.1
	output: 00.0 01.1 02.2 03.3 04.4 ... 15.4

	input: -w 1 -1 -1 
	output: 01 00 -1

	input: -w -1 1 1
	output: -1 00 01 
	
	input: -w 1 0.5 2
	output: 1.0 1.5 2.0

	# this test is actually broken in seq
	input: -w -1 1.1 5
	output: -1.0 00.1 01.2 02.3 03.4 04.5


## Format Tests ##

T42. input: -w -f "%e" 1 6
	output: Error cannot use format string when using equal width strings

T43. input: -f "%e" 1 4
	output: 1.000000e+00 2.000000e+00 3.000000e+00 4.000000e+00

T44. input: -f "%a" -1 1.1 11
	output: error right now because python does not have double

	input: --format="%e" 0.1 -0.1 -0.2
	output: 1.000000e-01 0.000000e+00 -1.000000e-01 -2.000000e-01

	input: --format "%e" 0.1 -0.1 -0.2
	output: 1.000000e-01 0.000000e+00 -1.000000e-01 -2.000000e-01

	input: -f "%0.1e" 1 3
	output: 1.0e+00 2.0e+00 3.0e+00

	input: -f "%03.3E" 1 3
	output: 1.000E+00 2.000E+00 3.000E+00

	input: --format= "%e" 1 3
	output: ERROR - No % directive

	input: --format="e" 1 3
	output: ERROR - No % directive

	input: -f "e" 1 3
	output: ERROR - No % directive

	input: -f
	output: ERROR - argument required


## Separator Tests ##
	input: -s, 1 10
	output: 1,2,3,4,5,6,7,8,9,10

	input: -s , 1 10
	output: 1,2,3,4,5,6,7,8,9,10

	input: --separator , 1 10
	output: 1,2,3,4,5,6,7,8,9,10

	input: --separator="," 1 10
	output: 1,2,3,4,5,6,7,8,9,10

	input: --separator, 1 10
	output: ERROR - Unrecognized option

	input: --separator=, 1 3
	output: 1,2,3 

	input: -s a\n 1 3
	output: 1an2an3

	input: -s \n 1 5
	output:
	1
	2
	3
	4
	5

	input: -s \t 1 5
	output: 1	2	3	4	5

	input: -s
	output: ERROR - argument required

## CL2 Tests ##
## -W/--words Tests ##
	input: -W 1 3
	output: 1 2 3
	
	input: --words 1 3
	output: 1 2 3 

	input: -W 1.4 2 10.4
	output: 1.4 3.4 5.4 7.4 9.4

	input: -s -W 1.1 0.1 4
	output: Error - Cannot use the separator flag with the words flag

	input: -s --word 1.1 0.1 4
	output: Error - Cannot use the separator flag with the words flag

## -p/--pad Tests ##
	input: -p 't' 1 3
	output: t1 t2 t3
	
	input: -p 't' -1 1.1 5
	output: -1.0 tt.1 t1.2 t2.3 t3.4 t4.5

	input: --pad=t 1 3
	output: t1 t2 t3

	input: -p '\a\n' 1 4
	output: Error - Pad string is greater than 1

	input: -p 't' -w 1 4
	output: Error - Cannot use --pad with --equal-width

	input: -p 't' -f '%e' 1 3
	output: Errpr - Cannot use the format flag with the pad flag

	input: -p \t 1 3
	output: 1	2	3

	input: -p \n -1 1
	output:
	-1

	0

	1
	
	input: -p
	output: Error - pad requires an argument 

## -P/--pad-spaces Tests ##
	input: -P 1 10
	output:
	 1
	 2
	 3
	 4
	 5
	 6
	 7
	 8
	 9
	10

	input: --pad-spaces -1 3
	output:
	-1
	 0
	 1
	 2
	 3

## -F/--format-word Tests ##
	input: -F 1 2 10
	output: 1 3 5 7 9

	input: -F -2 5
	output: -2 -1 0 1 2 3 4 5

	input: -F 5
	output: 1 2 3 4 5

	input: -F arabic 1 3 10
	output: 1 4 7 10

	input: --format-word=arabic 1 5 20
	output: 1 6 11 16

	input: --format-word arabic 1 4 8
	output: 1 5

	input: -F arabic 5
	output: 1 2 3 4 5

	input: -F 1.0 2 6
	output: ERROR - Not all args are arabic

	input: -F 1.1 6
	output: ERROR - Not all args are arabic

	input: -F arabic i 5
	output: ERROR - Not all args are arabic

	input: -F arabic one 5
	output: ERROR - Not all args are arabic

	input: --format-word= arabic 1 5 20
	output: ERROR - unrecognized option

	input: -F bang 6
	output: ERROR - invalid format for --format-word

	input: -F haha 6 12
	output: ERROR - invalid format for --format-word

	input: -F haha 6 12 36
	output: ERROR - unrecognized option 'haha'

	input: --format-word=bang 6 12
	output: ERROR - invalid format for --format-word

	input: -F 1.0 2.0 10.0
	output: 1 3 5 7 9

	input: -F 1.1 2.0 10.1
	output: 1.1 3.1 5.1 7.1 9.1

	input: -F 1.1 6.1
	output: 1.1 2.1 3.1 4.1 5.1 6.1

	input: -F 4.338
	output: 1 2 3 4

	input: -F floating 1.1 3.1 9.1
	output: 1.1 4.2 7.3

	input: -F bang 6.1
	output: ERROR - invalid format for --format-word

	input: -F bang 6.1 10.4
	output: ERROR - invalid format for --format-word

	input: -F bang 6.1 10.4 40.6
	output: ERROR - unrecognized option

	input: --format-word=floating 1.3 6.2
	output: 1.3 2.3 3.3 4.3 5.3

	input: --format-word= floating 1.1 3.1
	output: ERROR - unrecognized option

	input: -F alpha four
	output: one two three four

	input: -F ALPHA four
	output: ONE TWO THREE FOUR

	input: -F ALPHA one three
	output: ONE TWO THREE

	input: -F ALPHA three 2 five
	output: THREE FIVE

	input: -F alpha four 2 eight
	output: four six eight

	input: -F alpha twenty -2 fifteen
	output: twenty eighteen sixteen

	input: -F alpha "twenty one" "twenty three"
	output: twenty-one twenty-two twenty-three

	input: --format-word=alpha six 2 ten
	output: six eight ten

	input: -F alpha "one million and one" "one million and five"
	output: one million and one one million and two .... one million and five

	input: -F five
	output: one two three four five

	input: -F five 2 ten
	output: five seven nine

	input: -F bang five
	output: ERROR - bang is not a valid representation of a number

	input: -F bang five ten
	output: ERROR - increment option must be arabic when using alpha

	input: -F bang five 2 ten
	output: ERROR - Unrecognized option

	input: --format-word=bang five 2 ten
	output: ERROR - invalid format for bang

	input: --format-word= alpha six
	output: ERROR

	input: -F alpha one two six
	output: ERROR - Increment must be of type arabic

	input: -F alpha 1 2 six
	output: ERROR - One or more operands do not match the format option

	input: -F alpha
	output: ERROR - Missing operand

	input: -F alpha twenty one 2 twenty three
	output: ERROR - Unrecognized option

	input: -F roman i ii xi
	output: i iii v vii ix xi

	input: -F ROMAN i ii xi
	output: I III V VII IX XI

	input: -F roman ci cv
	ouput: ci cii ciii civ cv

	input: -F roman v
	output: i ii iii iv v

	input: -F v
	output: i ii iii iv v

	input: -F v 2 x
	output: v vii ix

	input: -F roman 1 2 5
	output: i iii iv

	input: -F roman 1 ii v
	output: i iii iv

	input: -F roman 1000 1002
	output: m mi mii

	input: -F roman mii
	ouput: i ii iii ...... mii

	input: -F x
	output: i ii iii iv v vi vii viii ix x

	input: -F roman 10 -4 1
	output: x vi ii

	input: -F x -4 i
	output: x vi ii

	input: --format-word=roman v
	output: i ii iii iv v

	input: --format-word=ROMAN v
	output: I II III IV V

	input: --format-word -s , four
	output: one,two,three,four

	input: -F -s, x ii xx
	output: x,xii,xiv,xvi,xviii,xx

	input: -F -W x ii xx
	output: x xii xiv xvi xviii xx

	input: -F --words one 2 ten
	output: one three five seven nine

	input: --format-word alpha --words one 2 ten
 	output: one three five seven nine

	input: -F i 1.1 5
	output: ERROR - One or more operands do not match the format option

	input: -F roman 5.1
	output: ERROR - One or more operands do not match the format option

	input: -F roman xfive
	output: ERROR - One or more operands do not match the format option

	input: -F roman i -2 -i
	output: ERROR - One or more operands do not match the format option

	input: -F bang x
	output: ERROR - One or more operands do not match the format option

	input: -F bang x xx
	output: ERROR - One or more operands do not match the format option

	input: -F bang x ii xx
	output: ERROR - unrecognized option 'bang'	

	input: --format-word= roman x
	output: ERROR - Unrecognized option

	input: --format-word=
	output: ERROR - Missing operand

	input: -F
	output: ERROR - Missing operand

	input: -F -2 ii xi
	output: ERROR - cannot use negative arabic for start or end with roman numerals
	
	input: -F -10 xx
	output: ERROR - cannot use negative arabic for start or end with roman numerals
	
	inputL -F x -1
	output: ERROR - Format-word is arabic and x is not so fail

	input: -F -w 1 5
	output: ERROR - Cannot use --equal-width with --format-word

	input: -F --equal-width sixteen
	output: ERROR - Cannot use --equal-width with --format-word

	input: --format-word -w x xx
	output: ERROR - Cannot use --equal-width with --format-word

	input: --format-word --equal-width x ii xx
	output: ERROR - Cannot use --equal-width with --format-word

	input: -F -p t 3.1 8.2
	output: ERROR - Cannot use --pad with --format-word

	input: -p t -F sixteen
	output: ERROR - Cannot use --pad with --format-word

	input: -F --pad \t 1 5
	output: ERROR - Cannot use --pad with --format-word

	input: --pad \t -F five
	output: ERROR - Cannot use --pad with --format-word

	input: --format-word -p t sixteen
	output: ERROR - Cannot use --pad with --format-word

	input: --format-word --pad \t 1 3 23
	output: ERROR - Cannot use --pad with --format-word

	input: -F -P 3.1 8.2
	output: ERROR - Cannot use --pad-spaces with --format-word

	input: -P -F sixteen
	output: ERROR - Cannot use --pad-spaces with --format-word

	input: -F --pad-spaces 1 5
	output: ERROR - Cannot use --pad-spaces with --format-word

	input: --pad-spaces -F five
	output: ERROR - Cannot use --pad-spaces with --format-word

	input: --format-word -P sixteen
	output: ERROR - Cannot use --pad-spaces with --format-word

	input: --format-word --pad-spaces 1 3 23
	output: ERROR - Cannot use --pad-spaces with --format-word

## --number-lines/-n Tests ##
	input: cat testfile.txt | -n -3 1
	output:
		-3 Foobar
		-2 text
		-1 goes right here
		0 forever
		1 and
		2 ever
		3 sdfsdf
		4 junk 123

	input: cat testfile.txt | -n 4
	output:
		4 Foobar
		5 text
		6 goes right here
		7 forever
		8 and
		9 ever
		10 sdfsdf
		11 junk 123
		
	input: cat testfile.txt | -n 1 0.2
	output:
		1 Foobar
		1.2 text
		1.4 goes right here
		1.6 forever
		1.8 and
		2.0 ever
		2.2 sdfsdf
		2.4 junk 123
		
	input: cat testfile.txt | -n 1 0.002
	output:
		1.000 Foobar
		1.002 text
		1.004 goes right here
		1.006 forever
		1.008 and
		1.010 ever
		1.012 sdfsdf
		1.014 junk 123
		
	input: cat testfile.txt | -P -n 6
	output:
		 6 Foobar
		 7 text
		 8 right here
		 9 forever
		10 and
		11 ever
		12 sdfsdf
		13 junk 123
		
		



	 


	




